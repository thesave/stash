#!/bin/bash

function stats() {

    local startedSeconds="$(sysctl -n kern.boottime | awk '{print $4}' | sed 's/.$//')"
    local nowSeconds="$(date +%s)"
    local upSeconds="$(expr $nowSeconds - $startedSeconds)"
    local secs=$((upSeconds%60))
    local mins=$((upSeconds/60%60))
    local hours=$((upSeconds/3600%24))
    local days=$((upSeconds/86400))
    local UPTIME=$(printf "%d days, %02dh%02dm%02ds" "$days" "$hours" "$mins" "$secs")

    # CPU temperatures:
    cpuTempC=$(istats cpu)

    # Battery status:

    batteryStat=$(istats battery charge)

    local memTotal=$(sysctl hw.memsize | awk {'print $2'})
    local memFreeby=$(vm_stat | grep "Pages free" | awk {'print $3'} | sed 's/.$//' | awk {'print $1*4096'})
    local memFree=$(vm_stat | grep "Pages free" | awk {'print $3'} | sed 's/.$//' | awk {'print $1*4'})
    local memPerc=$(awk "BEGIN { pc=100*${memFreeby}/${memTotal}; i=int(pc); print (pc-i<0.5)?i:i+1 }")

    local df_out=()
    local line
    while read line; do
        df_out+=("$line")
    done < <(df -h /)

    local rst="$(tput sgr0)"
    local fgblk="${rst}$(tput setaf 0)" # Black - Regular
    local fgred="${rst}$(tput setaf 1)" # Red
    local fggrn="${rst}$(tput setaf 2)" # Green
    local fgylw="${rst}$(tput setaf 3)" # Yellow
    local fgblu="${rst}$(tput setaf 4)" # Blue
    local fgpur="${rst}$(tput setaf 5)" # Purple
    local fgcyn="${rst}$(tput setaf 6)" # Cyan
    local fgwht="${rst}$(tput setaf 7)" # White

    local bld="$(tput bold)"
    local bfgblk="${bld}$(tput setaf 0)"
    local bfgred="${bld}$(tput setaf 1)"
    local bfggrn="${bld}$(tput setaf 2)"
    local bfgylw="${bld}$(tput setaf 3)"
    local bfgblu="${bld}$(tput setaf 4)"
    local bfgpur="${bld}$(tput setaf 5)"
    local bfgcyn="${bld}$(tput setaf 6)"
    local bfgwht="${bld}$(tput setaf 7)"

    local out=""
    out+="${fggrn}$(date +"%A, %e %B %Y, %r")\n"
    out+="${fggrn}$(uname -sr) | $(sw_vers -productName) $(sw_vers -productVersion)\n"
    out+="${fgylw}${df_out[0]}\n"
    out+="${fgwht}${df_out[1]}\n"
    out+="${fgred}Uptime.............: ${UPTIME}\n"
    out+="${fgred}Free Memory........: ${memFree}kB (${memPerc}%)\n"
    out+="${fgred}Running Processes..: $(ps ax | wc -l | tr -d " ")\n"
    out+="${fgred}IP Address.........: $(ipconfig getifaddr en0)\n"
    out+="${fgred}Temperature........: $cpuTempC\n"
    out+="${fgred}Charge.............: $batteryStat"
    echo -e "$out"
}

if [ ! -f .stats_backoff ]; then
    echo 0 > .stats_backoff
fi
cache=$(cat .stats_backoff)
cache=$((cache+600))
curDate=$(date +%s)
if [ "$cache" -lt "$curDate" ]; then
  echo "$curDate" > .stats_backoff
  stats
fi

#retropie_welcome